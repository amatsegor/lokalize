package lokalize.transformer

import lokalize.models.Options

class JsonTransformer : AbstractTransformer() {

    override fun transformComment(comment: String): String = ""

    override fun transformKeyValue(key: String, value: String, closing: Boolean): String {
        var normalizedValue = value.replace("/%newline%/gi".toRegex(), "\\n");
        normalizedValue = normalizedValue.replace("/\"/gi".toRegex(), "\\\"");
        normalizedValue = normalizedValue.replace("/%([@df])/gi".toRegex(), "%$1")
        normalizedValue = normalizedValue.replace("/%s/gi".toRegex(), "%@")

        val result = "  \"$key\" : \"$normalizedValue\""

        return if (closing) result else "$result,"
    }

    override fun insert(input: String?, newValues: String, options: Options): String {
        return "\n{\n$newValues\n}"
    }

    override val autogeneratedTag: String
        get() = ""

    companion object {
        const val NAME = "json"
    }
}